<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MOMOeven</title>
  
  <subtitle>最是人间不可留，回忆辞新人辞旧.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-02T08:43:00.532Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>MOMOeven</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C#脚本关于事件及获取</title>
    <link href="http://example.com/posts/aacb2b8c.html"/>
    <id>http://example.com/posts/aacb2b8c.html</id>
    <published>2022-10-02T22:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 鼠标点击</span></span><br><span class="line">        <span class="comment">// 按下鼠标触发事件</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>)) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;按下鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 持续按下鼠标</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 抬起鼠标</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>)) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;抬起鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 按下键盘按键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.A)) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;按下了A键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 持续按下A</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下了A键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 抬起按键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyUp(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;松开了A键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h1><ul><li><p>获取属性</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//  获取位置</span></span><br><span class="line">        Debug.Log(transform.position);</span><br><span class="line">        Debug.Log(transform.localEulerAngles);</span><br><span class="line">        <span class="comment">// 获取旋转</span></span><br><span class="line">        Debug.Log(transform.rotation);</span><br><span class="line">        Debug.Log(transform.localPosition);</span><br><span class="line">        Debug.Log(transform.eulerAngles);</span><br><span class="line">        Debug.Log(transform.localEulerAngles);</span><br><span class="line">        <span class="comment">// 获取缩放 </span></span><br><span class="line">        Debug.Log(transform.localScale);</span><br><span class="line">        <span class="comment">// 向量</span></span><br><span class="line">        Debug.Log(transform.forward);</span><br><span class="line">        Debug.Log(transform.right);</span><br><span class="line">        Debug.Log(transform.up);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 父子关系</span></span><br><span class="line">        <span class="comment">// 获取父物体</span></span><br><span class="line">        <span class="comment">//transform.parent.gameObject</span></span><br><span class="line">        <span class="comment">// 获取子物体</span></span><br><span class="line">        Debug.Log(transform.childCount);</span><br><span class="line">        <span class="comment">// 解除父子关系(父向子)</span></span><br><span class="line">        transform.DetachChildren();</span><br><span class="line">        <span class="comment">// 获取子物体</span></span><br><span class="line">        Transform trans = transform.Find(<span class="string">&quot;Child&quot;</span>);</span><br><span class="line">        trans = transform.GetChild(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 判断一个物体是否是另一个物体的子物体</span></span><br><span class="line">        <span class="built_in">bool</span> res = trans.IsChildOf(transform);</span><br><span class="line">        Debug.Log(res);</span><br><span class="line">        <span class="comment">// 设置父物体</span></span><br><span class="line">        trans.SetParent(transform);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>移动及状态</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 时刻看向000点</span></span><br><span class="line">        transform.LookAt(Vector3.zero);</span><br><span class="line">        <span class="comment">// 旋转</span></span><br><span class="line">        transform.Rotate(Vector3.up, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 绕某个物体旋转</span></span><br><span class="line">        transform.RotateAround(Vector3.zero, Vector3.up, <span class="number">5</span>);</span><br><span class="line">        <span class="comment">// 移动</span></span><br><span class="line">        transform.Translate(Vector3.forward * <span class="number">0.1f</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;事件&quot;&gt;&lt;a href=&quot;#事件&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h1&gt;&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于场景&amp;协程</title>
    <link href="http://example.com/posts/b485a69.html"/>
    <id>http://example.com/posts/b485a69.html</id>
    <published>2022-10-01T23:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="场景类与场景管理类"><a href="#场景类与场景管理类" class="headerlink" title="场景类与场景管理类"></a>场景类与场景管理类</h1><p> <strong><em>使用场景内前需导入模块using UnityEngine.SceneManagement;</em></strong><br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 两个类 场景类 场景管理类</span></span><br><span class="line">        <span class="comment">//SceneManager.LoadScene(1);</span></span><br><span class="line">        <span class="comment">// 获取当前场景</span></span><br><span class="line">        Scene scene = SceneManager.GetActiveScene();</span><br><span class="line">        <span class="comment">// 场景名称</span></span><br><span class="line">        Debug.Log(scene.name);</span><br><span class="line">        <span class="comment">// 场景是否已被加载</span></span><br><span class="line">        Debug.Log(scene.isLoaded);</span><br><span class="line">        <span class="comment">// 场景路径</span></span><br><span class="line">        Debug.Log(scene.path);</span><br><span class="line">        <span class="comment">// 场景索引</span></span><br><span class="line">        Debug.Log(scene.buildIndex);</span><br><span class="line">        GameObject[] gos = scene.GetRootGameObjects();</span><br><span class="line">        Debug.Log(gos.Length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 场景管理类</span></span><br><span class="line">        <span class="comment">// 已加载场景个数</span></span><br><span class="line">        Debug.Log(SceneManager.sceneCount);</span><br><span class="line">        <span class="comment">// 创建场景</span></span><br><span class="line">        Scene newScene =  SceneManager.CreateScene(<span class="string">&quot;newScene&quot;</span>);</span><br><span class="line">        <span class="comment">// 卸载场景</span></span><br><span class="line">        SceneManager.UnloadSceneAsync(newScene);</span><br><span class="line">        <span class="comment">// 加载场景</span></span><br><span class="line">        SceneManager.LoadScene(<span class="string">&quot;MyScene&quot;</span>, LoadSceneMode.Single);<span class="comment">// 移除旧场景</span></span><br><span class="line">        SceneManager.LoadScene(<span class="string">&quot;MyScene&quot;</span>, LoadSceneMode.Additive);<span class="comment">// 场景叠加</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h1><p> <strong><em>协同程序，在主程序运行的同时开启另一段逻辑处理，来协同当前程序的执行</em></strong><br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AsyncTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    AsyncOperation operation;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        StartCoroutine(loadScene());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 协程方法用来异步加载场景</span></span><br><span class="line">    <span class="function">IEnumerator <span class="title">loadScene</span>()</span>&#123;</span><br><span class="line">        operation = SceneManager.LoadSceneAsync(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 加载完场景不自动跳转</span></span><br><span class="line">        operation.allowSceneActivation = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> operation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">float</span> timer = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 输出加载进度  加载最大数值0-0.9</span></span><br><span class="line">        Debug.Log(operation.progress);</span><br><span class="line">        timer += Time.deltaTime;</span><br><span class="line">        <span class="comment">// 如果到达五秒在进行跳转</span></span><br><span class="line">        <span class="keyword">if</span> (timer &gt; <span class="number">5</span>) &#123;</span><br><span class="line">            operation.allowSceneActivation = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><div class="tip error"><p>error</p></div></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;场景类与场景管理类&quot;&gt;&lt;a href=&quot;#场景类与场景管理类&quot; class=&quot;headerlink&quot; title=&quot;场景类与场景管理类&quot;&gt;&lt;/a&gt;场景类与场景管理类&lt;/h1&gt;&lt;p&gt; &lt;strong&gt;&lt;em&gt;使用场景内前需导入模块using UnityEngine.</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于时间与文件路径</title>
    <link href="http://example.com/posts/179b297b.html"/>
    <id>http://example.com/posts/179b297b.html</id>
    <published>2022-10-01T22:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-的时间函数"><a href="#C-的时间函数" class="headerlink" title="C#的时间函数"></a>C#的时间函数</h1><ul><li><p>在Start中</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 游戏开始到现在所花时间</span></span><br><span class="line">        Debug.Log(Time.time);</span><br><span class="line">        <span class="comment">// 时间缩放值</span></span><br><span class="line">        Debug.Log(Time.timeScale);</span><br><span class="line">        <span class="comment">// 固定时间间隔</span></span><br><span class="line">        Debug.Log(Time.fixedDeltaTime);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>在Update中</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 计时效果</span></span><br><span class="line">        timer = timer + Time.deltaTime;</span><br><span class="line">        <span class="comment">//上一帧到这一帧所用时间</span></span><br><span class="line">        Debug.Log(Time.deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (timer &gt; <span class="number">3</span>) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;大于3秒&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 游戏数据文件夹路经(只读， 加密， 压缩)</span></span><br><span class="line">        Debug.Log(Application.dataPath + <span class="string">&quot;/MOMO.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 持久化文件夹路径</span></span><br><span class="line">        Debug.Log(Application.persistentDataPath);</span><br><span class="line">        <span class="comment">// 特殊目录StreamingAssets(只读， 配置文件)</span></span><br><span class="line">        Debug.Log(Application.streamingAssetsPath);</span><br><span class="line">        <span class="comment">// 临时文件夹</span></span><br><span class="line">        Debug.Log(Application.temporaryCachePath);</span><br><span class="line">        <span class="comment">// 控制是否在后台运行</span></span><br><span class="line">        Debug.Log(Application.runInBackground);</span><br><span class="line">        <span class="comment">// 打开一个url</span></span><br><span class="line">        Application.OpenURL(<span class="string">&quot;https://momoeve.top/&quot;</span>);</span><br><span class="line">        <span class="comment">// 退出游戏</span></span><br><span class="line">        Application.Quit();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-的时间函数&quot;&gt;&lt;a href=&quot;#C-的时间函数&quot; class=&quot;headerlink&quot; title=&quot;C#的时间函数&quot;&gt;&lt;/a&gt;C#的时间函数&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Start中&lt;/p&gt;
&lt;figure class=&quot;highlight c#&quot;&gt;</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于输出语句</title>
    <link href="http://example.com/posts/5e4c8c3.html"/>
    <id>http://example.com/posts/5e4c8c3.html</id>
    <published>2022-10-01T21:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h1><h2 id="在Start中"><a href="#在Start中" class="headerlink" title="在Start中"></a>在Start中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 普通输出</span></span><br><span class="line">        Debug.Log(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        <span class="comment">// 警告输出</span></span><br><span class="line">        Debug.LogWarning(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 错误输出</span></span><br><span class="line">        Debug.LogError(<span class="string">&quot;test3&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="在Update中"><a href="#在Update中" class="headerlink" title="在Update中"></a>在Update中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 绘制一条线（开始点， 结束点， 颜色， 持续时间， 是否被靠近相机的物体遮挡）</span></span><br><span class="line">        Debug.DrawLine(Vector3.zero, Vector3.one);</span><br><span class="line">        <span class="comment">// 绘制射线(长度不是无线需要自己输入长度)参数(射线起点， 射线方向， 颜色)参数二乘以所需长度即可指定长度否则为1</span></span><br><span class="line">        Debug.DrawRay(Vector3.zero, Vector3.up, Color.red);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;输出语句&quot;&gt;&lt;a href=&quot;#输出语句&quot; class=&quot;headerlink&quot; title=&quot;输出语句&quot;&gt;&lt;/a&gt;输出语句&lt;/h1&gt;&lt;h2 id=&quot;在Start中&quot;&gt;&lt;a href=&quot;#在Start中&quot; class=&quot;headerlink&quot; title=&quot;在St</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于Vector3</title>
    <link href="http://example.com/posts/4f978fef.html"/>
    <id>http://example.com/posts/4f978fef.html</id>
    <published>2022-10-01T20:00:01.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vector3结构体"><a href="#Vector3结构体" class="headerlink" title="Vector3结构体"></a>Vector3结构体</h1><p><strong><em>Vexctor3是属于C#中的结构体，里面包含三个变量x,y,z。可以代表向量，坐标，旋转，缩放</em></strong></p><h2 id="Vector3构造体的基本操作"><a href="#Vector3构造体的基本操作" class="headerlink" title="Vector3构造体的基本操作"></a>Vector3构造体的基本操作</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建结构体</span></span><br><span class="line">Vector3 v = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 为快捷创造</span></span><br><span class="line">v2 = Vector3.zero; <span class="comment">// zero = (0, 0, 0)</span></span><br><span class="line">v3 = Vector3.one; <span class="comment">// one = (1, 1, 1)</span></span><br><span class="line"><span class="comment">// 修改构造体</span></span><br><span class="line">v.x = <span class="number">2</span>;</span><br><span class="line">v.y = <span class="number">2</span>;</span><br><span class="line">v.z = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="Vector3构造体的基本运算-向量"><a href="#Vector3构造体的基本运算-向量" class="headerlink" title="Vector3构造体的基本运算(向量)"></a>Vector3构造体的基本运算(向量)</h2><ul><li><p>计算两个向量间的夹角</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(Vector3.Angle(v, v2));</span><br><span class="line">        <span class="comment">// cosa = &lt;v, v2&gt;= v*v2 / |v|*|v2|</span></span><br><span class="line">        <span class="comment">// |v| = (x*x + y*y + z*z) **0.5</span></span><br><span class="line">        <span class="comment">// |v2| = (x2*x2 + y2*y2 + z2*z2) **0.5</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>计算两个向量间的距离</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Distance(v, v2));</span><br><span class="line">    <span class="comment">// b = v*v2 = x*x2 + y*y2 + z*z2</span></span><br><span class="line">    <span class="comment">// b = |v|*|v2|*cosa</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>两个向量间的点乘</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Dot(v, v2));</span><br><span class="line">    <span class="comment">// v · v2 = |v|*|v2|*cosa</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>两个向量间的叉乘</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Cross(v, v2));</span><br><span class="line">    <span class="comment">// 得到一个既垂直于v又垂直于v2的向量假设为n</span></span><br><span class="line">    <span class="comment">// n = v x v2 = (y*z2 - y2*z, x2*z - z2*x, xy2 - x2y)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>插值</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Lerp(Vector3.zero,Vector3.one, <span class="number">0.8f</span>));</span><br><span class="line">    <span class="comment">// 公式start = start + (end - start) * t</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>模长</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(v.magnitude);</span><br><span class="line">    <span class="comment">// |v| = (x*x + y*y + z*z) **0.5 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>规范化向量</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(v.normalized);</span><br><span class="line">    <span class="comment">// 返回大小为一的向量保存原方向，若向量太小则返回0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Vector3构造体的基本运算-旋转"><a href="#Vector3构造体的基本运算-旋转" class="headerlink" title="Vector3构造体的基本运算(旋转)"></a>Vector3构造体的基本运算(旋转)</h2><ul><li><p>欧拉角(360度)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// z轴方向30度</span></span><br><span class="line">    Vector3 rotate = <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">30</span>);</span><br><span class="line">    Quaternion quaternion = Quaternion.identity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>欧拉角转为四元数</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    quaternion = Quaternion.Euler(rotate);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>四元数转为欧拉角</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">   rotate = quaternion.eulerAngles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>看向一个物体</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">   quaternion = Quaternion.LookRotation(<span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vector3结构体&quot;&gt;&lt;a href=&quot;#Vector3结构体&quot; class=&quot;headerlink&quot; title=&quot;Vector3结构体&quot;&gt;&lt;/a&gt;Vector3结构体&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Vexctor3是属于C#中的结构体，里面包含三个变</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本语言输出顺序(1)</title>
    <link href="http://example.com/posts/e18a0bd3.html"/>
    <id>http://example.com/posts/e18a0bd3.html</id>
    <published>2022-10-01T20:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-脚本语言的语句输出顺序"><a href="#C-脚本语言的语句输出顺序" class="headerlink" title="C#脚本语言的语句输出顺序"></a>C#脚本语言的语句输出顺序</h1><p>  <strong><em>以下语句皆为作为在unity中作为组件脚本语句时的输出顺序</em></strong></p><h2 id="Awake"><a href="#Awake" class="headerlink" title="Awake"></a>Awake</h2><ul><li>最优先运行  <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Awake最先调用&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="OnEnable"><a href="#OnEnable" class="headerlink" title="OnEnable"></a>OnEnable</h2><ul><li>激活unity组件后调用<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnEnable激活组件时调用&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><ul><li>第一次执行OnEnable后调用<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Start调用时机为第一次OnEnable后&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><ul><li>每一帧调用一次<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;每一帧调用之后&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="LateUpdate"><a href="#LateUpdate" class="headerlink" title="LateUpdate"></a>LateUpdate</h2><ul><li>LateUpdate在Update执行后执行一次<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;LateUpdate在Update执行后执行一次&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="FixedUpdate"><a href="#FixedUpdate" class="headerlink" title="FixedUpdate"></a>FixedUpdate</h2><ul><li>固定间隔执行一次(unity默认0.02秒)<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;固定间隔执行一次&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="OnDisable"><a href="#OnDisable" class="headerlink" title="OnDisable"></a>OnDisable</h2><ul><li>OnDisable非激活调用一次<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">       Debug.Log(<span class="string">&quot;OnDisable非激活调用一次&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="OnDestroy"><a href="#OnDestroy" class="headerlink" title="OnDestroy"></a>OnDestroy</h2><ul><li>OnDestroy组件销毁时调用<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDestroy</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnDestroy组件销毁时调用&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><div class="tip error"><p>error</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-脚本语言的语句输出顺序&quot;&gt;&lt;a href=&quot;#C-脚本语言的语句输出顺序&quot; class=&quot;headerlink&quot; title=&quot;C#脚本语言的语句输出顺序&quot;&gt;&lt;/a&gt;C#脚本语言的语句输出顺序&lt;/h1&gt;&lt;p&gt;  &lt;strong&gt;&lt;em&gt;以下语句皆为作为在uni</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>html学习(2)</title>
    <link href="http://example.com/posts/d34ebe7.html"/>
    <id>http://example.com/posts/d34ebe7.html</id>
    <published>2022-09-01T20:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="html工程结构"><a href="#html工程结构" class="headerlink" title="html工程结构"></a>html工程结构</h1><ul><li><p>文件结构<br>通常最外层文件夹取项目名称，内包含<strong>img</strong>文件夹(包含使用的图片)，<strong>js</strong>文件夹(放置自己的js文件)，<strong>css</strong>文件夹(放置css文件)，<strong>html</strong>文件夹(放置已写的html文件)， <strong>index.html</strong>主界面文件。</p></li><li><p>声明<br>属性=”属性值”</p><pre><code class="lang-html">  &lt;h1 align=&quot;center&quot;&gt; 《春》---朱自清 &lt;/h1&gt;       # 将h1 居中  &lt;hr color=&quot;green&quot; size=&quot;5&quot; /&gt; # 改变水平线的颜色   &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;盼望着,盼望着,春天的脚步近了...&lt;/p&gt;  # &amp;nbsp;表示空格。&lt;p&gt;为段落标签  &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;img width=&quot;150&quot; align=&quot;right&quot; src=&quot;https://img0.baidu.com/it/u=2556365070,2935399812&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=500&quot;&gt;  # &lt;img width=&quot;&quot;&gt; 为想要添加的图片可为路径或为图片网址。  一切都像&lt;b&gt;刚睡醒&lt;/b&gt;的样子．欣欣然张开了眼。山朗润起来了．水涨起来了．太阳的&lt;mark&gt;险红起来了&lt;/mark&gt;。  小草偷怕地从土里锁出来。姚觉的、绿线的。园子里。田野里。跪去。一大片一大片满是的。坐着、就着、打两个豫，踢门脚球、甚几地跑、&lt;span style=&quot;color:red; font-size:32px;&quot;&gt;捉П回迷熟。风锐俏样的、草软途宝的&lt;/span&gt;。&lt;/p&gt;  &lt;p&gt;&lt;img src=&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg2.huashi6.com%2Fimages%2Fresource%2F2021%2F02%2F07%2Fh87601952p0.png%3FimageView2%2F3%2Fq%2F100%2Finterlace%2F1%2Fw%2F1600%2Fh%2F1600%2Fformat%2Fjpeg&amp;refer=http%3A%2F%2Fimg2.huashi6.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=auto?sec=1664595280&amp;t=8f485810e87f403e5a06fa803b41965d&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;</code></pre><p>  效果展示:<br>  <h1 align="center"> 《春》<font size="2" color="gray">---朱自清</font> </h1><br>  <hr color="green" size="5" /></p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;盼望着,盼望着,春天的脚步近了...</p>  <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <img width="150" align="right" src="https://img0.baidu.com/it/u=2556365070,2935399812&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=500">    一切都像<b>刚睡醒</b>的样子．欣欣然张开了眼。    山朗润起来了．水涨起来了．太阳的<mark>险红起来了</mark>。小草偷怕地从土里锁出来。姚觉的、绿线的。园子里。田野里。跪去。一大片一大片满是的。坐着、就着、打两个豫，踢门脚球、甚几地跑、<span style="color:red; font-size:32px;">捉П回迷熟。风锐俏样的、草软途宝的<span>。</p>  <p><img width="500px" src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg2.huashi6.com%2Fimages%2Fresource%2F2021%2F02%2F07%2Fh87601952p0.png%3FimageView2%2F3%2Fq%2F100%2Finterlace%2F1%  2Fw%2F1600%2Fh%2F1600%2Fformat%2Fjpeg&refer=http%3A%2F%2Fimg2.huashi6.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1664595280&t=8f485810e87f403e5a06fa803b41965d">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p></li><li><p>路经<br>相对路径:<br><strong><em>带有参照的路径通，不带盘符(通常使用)</em></strong><br>绝对路径:<br><strong><em>有参照，通常以盘符开头。</em></strong></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;html工程结构&quot;&gt;&lt;a href=&quot;#html工程结构&quot; class=&quot;headerlink&quot; title=&quot;html工程结构&quot;&gt;&lt;/a&gt;html工程结构&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文件结构&lt;br&gt;通常最外层文件夹取项目名称，内包含&lt;strong&gt;img&lt;</summary>
      
    
    
    
    
    <category term="html学习笔记" scheme="http://example.com/tags/html%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>html学习(1)</title>
    <link href="http://example.com/posts/2619b824.html"/>
    <id>http://example.com/posts/2619b824.html</id>
    <published>2022-08-30T20:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用记事本开启第一篇网页"><a href="#使用记事本开启第一篇网页" class="headerlink" title="使用记事本开启第一篇网页"></a>使用记事本开启第一篇网页</h1><ul><li><p>创建html文件<br>在桌面创建一个后缀名为html的文件。<br>创建好后用文本编辑软件打开。</p></li><li><p>标签</p><p>  双标签:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>     <span class="tag">&lt;/<span class="name">b</span>&gt;</span> #表示加粗中间的文字  强调字体</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>    <span class="tag">&lt;/<span class="name">strong</span>&gt;</span> #加粗  强调笔画  </span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>     <span class="tag">&lt;/<span class="name">i</span>&gt;</span> #表示倾斜中间的文字。 </span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>     <span class="tag">&lt;/<span class="name">s</span>&gt;</span> #删除标签</span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>   <span class="tag">&lt;/<span class="name">del</span>&gt;</span> #删除  </span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>    <span class="tag">&lt;/<span class="name">em</span>&gt;</span> #倾斜</span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>     <span class="tag">&lt;/<span class="name">u</span>&gt;</span> #下划线标签</span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>   <span class="tag">&lt;/<span class="name">sup</span>&gt;</span> #上标签</span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>   <span class="tag">&lt;/<span class="name">sub</span>&gt;</span> #下标签</span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span>  <span class="tag">&lt;/<span class="name">mark</span>&gt;</span> #高亮标签  </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>     <span class="tag">&lt;/<span class="name">p</span>&gt;</span> #段落标签</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  <span class="tag">&lt;/<span class="name">html</span>&gt;</span> #网页标签</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  <span class="tag">&lt;/<span class="name">head</span>&gt;</span> #头部标签  </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span> <span class="tag">&lt;/<span class="name">title</span>&gt;</span> #声明标题</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  <span class="tag">&lt;/<span class="name">body</span>&gt;</span> #身体标签放置网页主体内容</span><br></pre></td></tr></table></figure><p>  单标签:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span> #换行标签</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> #声明编码方式</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span> #水平线</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://或图片路径&gt;</span></span></span><br></pre></td></tr></table></figure><p>  <em>标签的嵌套必须成套嵌套不能单个嵌套。</em>  </p></li><li><p>html网页结构<br>  通常由一父标签&lt;….&gt;开始一个子标签&lt;/….&gt;结束。</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;! doctype html&gt; </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用记事本开启第一篇网页&quot;&gt;&lt;a href=&quot;#使用记事本开启第一篇网页&quot; class=&quot;headerlink&quot; title=&quot;使用记事本开启第一篇网页&quot;&gt;&lt;/a&gt;使用记事本开启第一篇网页&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建html文件&lt;br&gt;在桌面创建一个后缀</summary>
      
    
    
    
    
    <category term="html学习笔记" scheme="http://example.com/tags/html%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python学习(1)</title>
    <link href="http://example.com/posts/743c31e9.html"/>
    <id>http://example.com/posts/743c31e9.html</id>
    <published>2022-08-29T20:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python代码格式"><a href="#python代码格式" class="headerlink" title="python代码格式"></a>python代码格式</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li><p>单行注释</p><p>  python单行注释以#开头用于注释,用于说明当前行代码的功能。 </p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># print(Hello World!)</span></span><br><span class="line"><span class="built_in">print</span>(Hello World!)</span><br></pre></td></tr></table></figure><p>  python单行注释ctrl+#可以对选取的代码块进行全注释.</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#for j in range(9):</span></span><br><span class="line"><span class="comment">#   print(j)</span></span><br></pre></td></tr></table></figure></li><li><p>多行注释</p><p>  python多行注释选用三组””或’’进行注释。符号中的代码块将被进行注释。</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;for j in range(9):</span></span><br><span class="line"><span class="string">        print(j)&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;for j in range(9):</span></span><br><span class="line"><span class="string">    print(j)&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><ul><li><p>pyton的缩进要求严格</p><p>  缩进python缩进要求同一逻辑等级代码对齐，同时，代码前要求以一个tab或四个空格为一个缩进单位。  </p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#错误代码</span></span><br><span class="line">a = <span class="number">4</span>;</span><br><span class="line">b = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span> a == b:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;a与b相等。&quot;</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a与b不相等。&quot;</span>)</span><br><span class="line"><span class="comment">#齐中if与else逻辑等级同级它们应该对齐，而第一个print前空格因该为4个空格。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#正确代码</span></span><br><span class="line">a = <span class="number">4</span>;</span><br><span class="line">b = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">if</span> a == b:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;a与b相等。&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a与b不相等。&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2></li><li><p>python命名规则  </p><p>python的py文件名命规则：</p><p><strong><em>1</em></strong>, 不能以数字开头给py文件及变量命名。</p><p><strong><em>2</em></strong>, 不能使用关键字命名。  </p><p><strong><em>3</em></strong>, 变量名区分大小写。  </p></li><li><p>python关键字<br>  python一共33个关键字</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;False&#x27;</span>, <span class="string">&#x27;None&#x27;</span>, <span class="string">&#x27;True&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;as&#x27;</span>, <span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;break&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;continue&#x27;</span>, <span class="string">&#x27;def&#x27;</span>,<span class="string">&#x27;del&#x27;</span>,<span class="string">&#x27;elif&#x27;</span>, <span class="string">&#x27;else&#x27;</span>,<span class="string">&#x27;except&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;finally&#x27;</span>, <span class="string">&#x27;for&#x27;</span>, <span class="string">&#x27;from&#x27;</span>, <span class="string">&#x27;global&#x27;</span>, <span class="string">&#x27;if&#x27;</span>,<span class="string">&#x27;import&#x27;</span>,<span class="string">&#x27;in&#x27;</span>,<span class="string">&#x27;is&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;lambda&#x27;</span>, <span class="string">&#x27;nonlocal&#x27;</span>, <span class="string">&#x27;not&#x27;</span>,<span class="string">&#x27;or&#x27;</span><span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;raise&#x27;</span>, <span class="string">&#x27;return&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;try&#x27;</span>,<span class="string">&#x27;while&#x27;</span>,<span class="string">&#x27;with&#x27;</span>,<span class="string">&#x27;yield&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="python变量"><a href="#python变量" class="headerlink" title="python变量"></a>python变量</h1><pre><code>程序运行期间数据会被保存到计算机内存单元中，为了方便***存取内存单元***中的***数据***，python使用***标识符***来标识不同内存单元，如此标识符与数据建立联系。  python通过赋值运算符 “=” 来给变量赋值。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">print</span>(num); <span class="comment">#输出123，</span></span><br><span class="line">```  </span><br><span class="line">数据类型，python的数据类型包括**<span class="built_in">int</span>(dool)**整型**<span class="built_in">float</span>**浮点型，**<span class="built_in">complex</span>**复数类型(类似科学计数法)，**string**字符型，**<span class="built_in">tuple</span>**元组，**<span class="built_in">list</span>**列表，**<span class="built_in">set</span>**集合，**dictionary**字典。</span><br><span class="line">```python</span><br><span class="line">my_int = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">print</span>(my_int);</span><br><span class="line"></span><br><span class="line">my_double_true= <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print</span>(my_double_tue);</span><br><span class="line"></span><br><span class="line">my_double_fales= <span class="number">0</span>;</span><br><span class="line"><span class="built_in">print</span>(my_double_fales);</span><br><span class="line"></span><br><span class="line">my_float = <span class="number">1.2345</span>;</span><br><span class="line"><span class="built_in">print</span>(my_float);</span><br><span class="line"></span><br><span class="line">my_complex = <span class="number">1.23e10</span>;</span><br><span class="line"><span class="built_in">print</span>(my_complex);</span><br><span class="line"></span><br><span class="line">my_string = <span class="string">&quot;ABC&quot;</span>;</span><br><span class="line"><span class="built_in">print</span>(my_string);</span><br><span class="line"></span><br><span class="line">my_tuple = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">print</span>(my_string);</span><br><span class="line"><span class="comment"># 元组不可以修改，只读</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="built_in">print</span>(my_list);</span><br><span class="line"><span class="comment">#可装各种数据类型,可修改</span></span><br><span class="line">my_set = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="built_in">print</span>(my_set);</span><br><span class="line"><span class="comment"># 无序且唯一</span></span><br><span class="line">my_dictionary = &#123;<span class="string">&quot;age&quot;</span>:<span class="number">1</span>, <span class="string">&quot;name&quot;</span>:<span class="string">&quot;MOMO&quot;</span>&#125;;</span><br><span class="line"><span class="built_in">print</span>(my_dictionary);</span><br><span class="line"><span class="comment"># 包含value：key 键值对的组合 键不可重复。</span></span><br></pre></td></tr></table></figure></code></pre><div class="tip info"><p>info</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python代码格式&quot;&gt;&lt;a href=&quot;#python代码格式&quot; class=&quot;headerlink&quot; title=&quot;python代码格式&quot;&gt;&lt;/a&gt;python代码格式&lt;/h1&gt;&lt;h2 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="python学习笔记" scheme="http://example.com/tags/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156.html"/>
    <id>http://example.com/posts/4a17b156.html</id>
    <published>2022-07-24T00:00:00.000Z</published>
    <updated>2022-10-02T08:43:00.532Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
