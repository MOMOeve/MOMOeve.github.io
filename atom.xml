<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MOMOeven</title>
  
  <subtitle>最是人间不可留，回忆辞新人辞旧.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-16T07:03:50.159Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>MOMOeven</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C#学习(2)</title>
    <link href="http://example.com/posts/a12057cd.html"/>
    <id>http://example.com/posts/a12057cd.html</id>
    <published>2022-10-14T21:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-中的数据类型与转义符"><a href="#C-中的数据类型与转义符" class="headerlink" title="C#中的数据类型与转义符"></a>C#中的数据类型与转义符</h1><h2 id="C-中的基本数据类型"><a href="#C-中的基本数据类型" class="headerlink" title="C#中的基本数据类型"></a>C#中的基本数据类型</h2><p>C#中的数据类型分两大类分别是值类型和引用类型  </p><p><strong><em>值类型分为：</em></strong> 整型，浮点型，字符型，布尔型，枚举型等等。<br>(值类型存储在数据栈中， <strong><em>存放那个值所占用的内存空间大小</em></strong>)</p><p><strong><em>引用类型分为：</em></strong> 接口，数组，委托，字符串等。<br>(引用类型存储在数据堆中， <strong><em>存放那个数值的空间地址</em></strong>)  </p><ul><li>整型（int）<br>用来存储整数，按照取值范围又将整型分为几个类型，分别是byte类型，shot类型，int类型，long类型且还分别定义了有符号和无符号。有符号代表可以定义0以下的值（也就是负数）而无符号只能定义0和0以上的值。  </li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:center">占用字节</th><th style="text-align:center">取值范围</th><th style="text-align:center">有无符号</th></tr></thead><tbody><tr><td style="text-align:left">sbyte</td><td style="text-align:center">1字节</td><td style="text-align:center">-2<sup>7</sup>~2<sup>7</sup>-1</td><td style="text-align:center">有符号</td></tr><tr><td style="text-align:left">byte</td><td style="text-align:center">1字节</td><td style="text-align:center">0~2<sup>8</sup>-1</td><td style="text-align:center">无符号</td></tr><tr><td style="text-align:left">shot</td><td style="text-align:center">2字节</td><td style="text-align:center">-2<sup>15</sup>~2<sup>15</sup>-1</td><td style="text-align:center">有符号</td></tr><tr><td style="text-align:left">ushot</td><td style="text-align:center">2字节</td><td style="text-align:center">0~2<sup>16</sup>-1</td><td style="text-align:center">无符号</td></tr><tr><td style="text-align:left">int</td><td style="text-align:center">4字节</td><td style="text-align:center">-2<sup>31</sup>~2<sup>31</sup>-1</td><td style="text-align:center">有符号</td></tr><tr><td style="text-align:left">uint</td><td style="text-align:center">4字节</td><td style="text-align:center">0~2<sup>32</sup>-1</td><td style="text-align:center">无符号</td></tr><tr><td style="text-align:left">long</td><td style="text-align:center">8字节</td><td style="text-align:center">-2<sup>63</sup>~2<sup>63</sup>-1</td><td style="text-align:center">有符号</td></tr><tr><td style="text-align:left">ulong</td><td style="text-align:center">8字节</td><td style="text-align:center">0~2<sup>64</sup>-1</td><td style="text-align:center">无符号</td></tr></tbody></table></div><ul><li>浮点型（float或double）<br>浮点型用来存储小数，浮点型分为两类分别是 <strong><em>单精度浮点型</em></strong> 和 <strong><em>双精度浮点型</em></strong>   在C#中默认的浮点型是 <strong>double</strong> 如果需要使用 <strong>float</strong> 则需要在小数后面加上F或f。（例如3.14f，3.14F）</li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:center">占用字节</th><th style="text-align:center">取值范围</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:left">float</td><td style="text-align:center">4字节</td><td style="text-align:center">最多保留7位小数</td><td style="text-align:center">单精度浮点型</td></tr><tr><td style="text-align:left">double</td><td style="text-align:center">8字节</td><td style="text-align:center">最多保留14位小数</td><td style="text-align:center">双精度浮点型</td></tr></tbody></table></div><ul><li><p>字符型（char）<br>字符类型使用char关键字来表示，它占用两个字符能存储一个汉字，字母，或符号使用char类型时需要用单引号括起。（’乱’，’a’,’/‘等）  </p></li><li><p>布尔类型（bool）<br>bool类型用bool来声明，它只有两个值 <strong><em>true</em></strong> 或 <strong><em>false</em></strong> 这两个值经常用来判断 成立或不成立。</p></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sbyte</span> mo = <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">sbyte</span> mo_ = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">byte</span> mo2 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">shot mo3 = <span class="number">-1</span>;</span><br><span class="line">shot mo3_ = <span class="number">1</span>;</span><br><span class="line">ushot mo4 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> mo5 = <span class="number">-1234</span>;</span><br><span class="line"><span class="built_in">int</span> mo5_ = <span class="number">1234</span>;</span><br><span class="line"><span class="built_in">uint</span> mo6 = <span class="number">1234</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">long</span> mo7 = <span class="number">-1234567</span>;</span><br><span class="line"><span class="built_in">long</span> mo7_ = <span class="number">1234567</span>;</span><br><span class="line"><span class="built_in">ulong</span> mo8 = <span class="number">1234567</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">double</span> mo9 = <span class="number">1.2424</span>;</span><br><span class="line"><span class="built_in">float</span> mo10 = <span class="number">1.244f</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">char</span> mo11 = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bool</span> mo12 = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">bool</span> mo13 = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h2 id="C-中的转义符"><a href="#C-中的转义符" class="headerlink" title="C#中的转义符"></a>C#中的转义符</h2><p>转义符的作用就是输出这个特殊含义的字符，转义字符的使用用方式非常简单，常用转义符如下。  </p><div class="table-container"><table><thead><tr><th style="text-align:left">转义字符</th><th style="text-align:center">等价字符</th></tr></thead><tbody><tr><td style="text-align:left">\’</td><td style="text-align:center">单引号</td></tr><tr><td style="text-align:left">\”</td><td style="text-align:center">双引号</td></tr><tr><td style="text-align:left">\</td><td style="text-align:center">反斜杠</td></tr><tr><td style="text-align:left">\0</td><td style="text-align:center">空</td></tr><tr><td style="text-align:left">\a</td><td style="text-align:center">警告(产生一声”叮”)</td></tr><tr><td style="text-align:left">\b</td><td style="text-align:center">退格</td></tr><tr><td style="text-align:left">\f</td><td style="text-align:center">换页</td></tr><tr><td style="text-align:left">\n</td><td style="text-align:center">换行</td></tr><tr><td style="text-align:left">\r</td><td style="text-align:center">回车</td></tr><tr><td style="text-align:left">\t</td><td style="text-align:center">水平制表符</td></tr><tr><td style="text-align:left">\v</td><td style="text-align:center">垂直制表符</td></tr></tbody></table></div><div class="tip ban"><p>ban</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-中的数据类型与转义符&quot;&gt;&lt;a href=&quot;#C-中的数据类型与转义符&quot; class=&quot;headerlink&quot; title=&quot;C#中的数据类型与转义符&quot;&gt;&lt;/a&gt;C#中的数据类型与转义符&lt;/h1&gt;&lt;h2 id=&quot;C-中的基本数据类型&quot;&gt;&lt;a href=&quot;#C-中</summary>
      
    
    
    
    
    <category term="C#学习笔记" scheme="http://example.com/tags/C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#学习(1)</title>
    <link href="http://example.com/posts/8a0d040e.html"/>
    <id>http://example.com/posts/8a0d040e.html</id>
    <published>2022-10-14T20:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初识C"><a href="#初识C" class="headerlink" title="初识C"></a>初识C</h1><h2 id="C-程序的结构"><a href="#C-程序的结构" class="headerlink" title="C#程序的结构"></a>C#程序的结构</h2><p> 一个C#程序要包括以下几个部分  </p><ul><li>命名空间声明(Namespace declaration)  </li><li>一个Class方法</li><li>Class 方法</li><li>Class 属性  </li><li>一个Main方法</li><li>语句(Statements) &amp; 表达式(Expressions)</li><li>注释  </li></ul><p>代码块<br> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">using</span> System;</span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">filename</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">HelloWorld</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Console: 控制台</span></span><br><span class="line">                <span class="comment">// WriteLine: 写入一行</span></span><br><span class="line">                <span class="comment">// 作用： 控制台中打印一行</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Hello  World!&quot;</span>);</span><br><span class="line">                <span class="comment">// ReadKey: 读取一个键</span></span><br><span class="line">                <span class="comment">// 作用： 不让窗口闪过等待用户按下下一个按键</span></span><br><span class="line">                COnsole.ReadKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">```    </span><br><span class="line">   </span><br><span class="line">输出结果</span><br><span class="line">```Text</span><br><span class="line">    Hello World!</span><br><span class="line">```    </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 第一行 ***<span class="keyword">using</span> System;*** <span class="keyword">using</span>关键字用于程序中包含System的命名空间。</span><br><span class="line">* ***<span class="keyword">namespace</span>*** 是一个声明， 一个<span class="title">namespac</span>里面包含一系列的类<span class="title">filename</span>命名空间包含了<span class="title">HelloWorld</span>类。</span><br><span class="line">* ***<span class="title">class</span>*** 声明。类<span class="title">HelloWorld</span>包含了程序使用的数据和方法声明。类一般包含了多个方法，方法定义了类的行为，在上面代码中只有一个<span class="title">Main</span>方法。</span><br><span class="line">* ***<span class="title">Main</span>*** 方法， 是所有<span class="title">C</span>#程序的入口点。</span><br><span class="line"></span><br><span class="line"><span class="title">C</span>#程序是对大小写敏感的   </span><br><span class="line">* 所有的语句和表达式必须以分号 ***;*** 结尾。</span><br><span class="line">* 程序的执行从 ***Main*** 方法开始。</span><br><span class="line">* 名称一般使用首字母大写。</span><br><span class="line"></span><br><span class="line"><span class="meta">## C#基本语法  </span></span><br><span class="line">C<span class="meta"># 是一种面向对象的编程语言。在面向对象的程序设计方法中，程序由各种相互交互的对象组成，相同种类的对象通常具有相同的类型，或者说在相同的class中。</span></span><br><span class="line"></span><br><span class="line">以立方体为例它具有长，宽，高属性。根据特性它可以接受这些属性值，计算面积和体积。  </span><br><span class="line"></span><br><span class="line">下面就来看看C<span class="meta">#的基本语法  </span></span><br><span class="line">   </span><br><span class="line">代码</span><br><span class="line">```C<span class="meta">#</span></span><br><span class="line">    <span class="keyword">using</span> System;</span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">Filename</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Cube</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">double</span> length;</span><br><span class="line">            <span class="built_in">double</span> width;</span><br><span class="line">            <span class="built_in">double</span> height;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Accepdetails</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                length = <span class="number">5.5</span>;</span><br><span class="line">                width = <span class="number">4.5</span>;</span><br><span class="line">                height = <span class="number">3.5</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 计算表面积并返回</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetAree</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> length*width*<span class="number">2</span> + height*width*<span class="number">2</span> + height*length*<span class="number">2</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 计算体积积并返回</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> length*width*height</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 控制台输出</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;长宽高分别是&#123;0&#125;，&#123;1&#125;，&#123;2&#125;。&quot;</span>,length,width,height);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;表面积是&#123;0&#125;体积是&#123;1&#125;。&quot;</span>,GerAree(),GetArea());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">class</span> <span class="title">MOMOeven</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// new一个对象</span></span><br><span class="line">                Cube s = <span class="keyword">new</span> Cube();</span><br><span class="line">                s.GetAree();</span><br><span class="line">                s.GetArea();</span><br><span class="line">                s.Display();</span><br><span class="line"></span><br><span class="line">                Console.ReadKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">```    </span><br><span class="line">    </span><br><span class="line">输出结果</span><br><span class="line">```Text</span><br><span class="line">长宽高分别是<span class="number">5.5</span>，<span class="number">4.5</span>，<span class="number">3.5</span>。</span><br><span class="line">表面积是<span class="number">119.5</span>体积是<span class="number">86.625</span>。</span><br></pre></td></tr></table></figure></p><h2 id="C-中的基本注释"><a href="#C-中的基本注释" class="headerlink" title="C#中的基本注释"></a>C#中的基本注释</h2><ul><li><p>单行注释</p><pre><code class="lang-C#">  // 注释类容</code></pre></li><li><p>多行注释</p><pre><code class="lang-C#">  /* 注释类容（可跨行注释） */</code></pre></li></ul><div class="tip "><p>default</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;初识C&quot;&gt;&lt;a href=&quot;#初识C&quot; class=&quot;headerlink&quot; title=&quot;初识C&quot;&gt;&lt;/a&gt;初识C&lt;/h1&gt;&lt;h2 id=&quot;C-程序的结构&quot;&gt;&lt;a href=&quot;#C-程序的结构&quot; class=&quot;headerlink&quot; title=&quot;C#程序的结构</summary>
      
    
    
    
    
    <category term="C#学习笔记" scheme="http://example.com/tags/C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于事件及获取</title>
    <link href="http://example.com/posts/aacb2b8c.html"/>
    <id>http://example.com/posts/aacb2b8c.html</id>
    <published>2022-10-02T22:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 鼠标点击</span></span><br><span class="line">        <span class="comment">// 按下鼠标触发事件</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>)) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;按下鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 持续按下鼠标</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 抬起鼠标</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>)) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;抬起鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 按下键盘按键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.A)) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;按下了A键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 持续按下A</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下了A键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 抬起按键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyUp(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;松开了A键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h1><ul><li><p>获取属性</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//  获取位置</span></span><br><span class="line">        Debug.Log(transform.position);</span><br><span class="line">        Debug.Log(transform.localEulerAngles);</span><br><span class="line">        <span class="comment">// 获取旋转</span></span><br><span class="line">        Debug.Log(transform.rotation);</span><br><span class="line">        Debug.Log(transform.localPosition);</span><br><span class="line">        Debug.Log(transform.eulerAngles);</span><br><span class="line">        Debug.Log(transform.localEulerAngles);</span><br><span class="line">        <span class="comment">// 获取缩放 </span></span><br><span class="line">        Debug.Log(transform.localScale);</span><br><span class="line">        <span class="comment">// 向量</span></span><br><span class="line">        Debug.Log(transform.forward);</span><br><span class="line">        Debug.Log(transform.right);</span><br><span class="line">        Debug.Log(transform.up);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 父子关系</span></span><br><span class="line">        <span class="comment">// 获取父物体</span></span><br><span class="line">        <span class="comment">//transform.parent.gameObject</span></span><br><span class="line">        <span class="comment">// 获取子物体</span></span><br><span class="line">        Debug.Log(transform.childCount);</span><br><span class="line">        <span class="comment">// 解除父子关系(父向子)</span></span><br><span class="line">        transform.DetachChildren();</span><br><span class="line">        <span class="comment">// 获取子物体</span></span><br><span class="line">        Transform trans = transform.Find(<span class="string">&quot;Child&quot;</span>);</span><br><span class="line">        trans = transform.GetChild(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 判断一个物体是否是另一个物体的子物体</span></span><br><span class="line">        <span class="built_in">bool</span> res = trans.IsChildOf(transform);</span><br><span class="line">        Debug.Log(res);</span><br><span class="line">        <span class="comment">// 设置父物体</span></span><br><span class="line">        trans.SetParent(transform);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>移动及状态</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 时刻看向000点</span></span><br><span class="line">        transform.LookAt(Vector3.zero);</span><br><span class="line">        <span class="comment">// 旋转</span></span><br><span class="line">        transform.Rotate(Vector3.up, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 绕某个物体旋转</span></span><br><span class="line">        transform.RotateAround(Vector3.zero, Vector3.up, <span class="number">5</span>);</span><br><span class="line">        <span class="comment">// 移动</span></span><br><span class="line">        transform.Translate(Vector3.forward * <span class="number">0.1f</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;事件&quot;&gt;&lt;a href=&quot;#事件&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h1&gt;&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于场景&amp;协程</title>
    <link href="http://example.com/posts/b485a69.html"/>
    <id>http://example.com/posts/b485a69.html</id>
    <published>2022-10-01T23:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="场景类与场景管理类"><a href="#场景类与场景管理类" class="headerlink" title="场景类与场景管理类"></a>场景类与场景管理类</h1><p> <strong><em>使用场景内前需导入模块using UnityEngine.SceneManagement;</em></strong><br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 两个类 场景类 场景管理类</span></span><br><span class="line">        <span class="comment">//SceneManager.LoadScene(1);</span></span><br><span class="line">        <span class="comment">// 获取当前场景</span></span><br><span class="line">        Scene scene = SceneManager.GetActiveScene();</span><br><span class="line">        <span class="comment">// 场景名称</span></span><br><span class="line">        Debug.Log(scene.name);</span><br><span class="line">        <span class="comment">// 场景是否已被加载</span></span><br><span class="line">        Debug.Log(scene.isLoaded);</span><br><span class="line">        <span class="comment">// 场景路径</span></span><br><span class="line">        Debug.Log(scene.path);</span><br><span class="line">        <span class="comment">// 场景索引</span></span><br><span class="line">        Debug.Log(scene.buildIndex);</span><br><span class="line">        GameObject[] gos = scene.GetRootGameObjects();</span><br><span class="line">        Debug.Log(gos.Length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 场景管理类</span></span><br><span class="line">        <span class="comment">// 已加载场景个数</span></span><br><span class="line">        Debug.Log(SceneManager.sceneCount);</span><br><span class="line">        <span class="comment">// 创建场景</span></span><br><span class="line">        Scene newScene =  SceneManager.CreateScene(<span class="string">&quot;newScene&quot;</span>);</span><br><span class="line">        <span class="comment">// 卸载场景</span></span><br><span class="line">        SceneManager.UnloadSceneAsync(newScene);</span><br><span class="line">        <span class="comment">// 加载场景</span></span><br><span class="line">        SceneManager.LoadScene(<span class="string">&quot;MyScene&quot;</span>, LoadSceneMode.Single);<span class="comment">// 移除旧场景</span></span><br><span class="line">        SceneManager.LoadScene(<span class="string">&quot;MyScene&quot;</span>, LoadSceneMode.Additive);<span class="comment">// 场景叠加</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h1><p> <strong><em>协同程序，在主程序运行的同时开启另一段逻辑处理，来协同当前程序的执行</em></strong><br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AsyncTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    AsyncOperation operation;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        StartCoroutine(loadScene());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 协程方法用来异步加载场景</span></span><br><span class="line">    <span class="function">IEnumerator <span class="title">loadScene</span>()</span>&#123;</span><br><span class="line">        operation = SceneManager.LoadSceneAsync(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 加载完场景不自动跳转</span></span><br><span class="line">        operation.allowSceneActivation = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> operation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">float</span> timer = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 输出加载进度  加载最大数值0-0.9</span></span><br><span class="line">        Debug.Log(operation.progress);</span><br><span class="line">        timer += Time.deltaTime;</span><br><span class="line">        <span class="comment">// 如果到达五秒在进行跳转</span></span><br><span class="line">        <span class="keyword">if</span> (timer &gt; <span class="number">5</span>) &#123;</span><br><span class="line">            operation.allowSceneActivation = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><div class="tip error"><p>error</p></div></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;场景类与场景管理类&quot;&gt;&lt;a href=&quot;#场景类与场景管理类&quot; class=&quot;headerlink&quot; title=&quot;场景类与场景管理类&quot;&gt;&lt;/a&gt;场景类与场景管理类&lt;/h1&gt;&lt;p&gt; &lt;strong&gt;&lt;em&gt;使用场景内前需导入模块using UnityEngine.</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于时间与文件路径</title>
    <link href="http://example.com/posts/179b297b.html"/>
    <id>http://example.com/posts/179b297b.html</id>
    <published>2022-10-01T22:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-的时间函数"><a href="#C-的时间函数" class="headerlink" title="C#的时间函数"></a>C#的时间函数</h1><ul><li><p>在Start中</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 游戏开始到现在所花时间</span></span><br><span class="line">        Debug.Log(Time.time);</span><br><span class="line">        <span class="comment">// 时间缩放值</span></span><br><span class="line">        Debug.Log(Time.timeScale);</span><br><span class="line">        <span class="comment">// 固定时间间隔</span></span><br><span class="line">        Debug.Log(Time.fixedDeltaTime);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>在Update中</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 计时效果</span></span><br><span class="line">        timer = timer + Time.deltaTime;</span><br><span class="line">        <span class="comment">//上一帧到这一帧所用时间</span></span><br><span class="line">        Debug.Log(Time.deltaTime);</span><br><span class="line">        <span class="keyword">if</span> (timer &gt; <span class="number">3</span>) &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;大于3秒&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 游戏数据文件夹路经(只读， 加密， 压缩)</span></span><br><span class="line">        Debug.Log(Application.dataPath + <span class="string">&quot;/MOMO.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// 持久化文件夹路径</span></span><br><span class="line">        Debug.Log(Application.persistentDataPath);</span><br><span class="line">        <span class="comment">// 特殊目录StreamingAssets(只读， 配置文件)</span></span><br><span class="line">        Debug.Log(Application.streamingAssetsPath);</span><br><span class="line">        <span class="comment">// 临时文件夹</span></span><br><span class="line">        Debug.Log(Application.temporaryCachePath);</span><br><span class="line">        <span class="comment">// 控制是否在后台运行</span></span><br><span class="line">        Debug.Log(Application.runInBackground);</span><br><span class="line">        <span class="comment">// 打开一个url</span></span><br><span class="line">        Application.OpenURL(<span class="string">&quot;https://momoeve.top/&quot;</span>);</span><br><span class="line">        <span class="comment">// 退出游戏</span></span><br><span class="line">        Application.Quit();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-的时间函数&quot;&gt;&lt;a href=&quot;#C-的时间函数&quot; class=&quot;headerlink&quot; title=&quot;C#的时间函数&quot;&gt;&lt;/a&gt;C#的时间函数&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Start中&lt;/p&gt;
&lt;figure class=&quot;highlight c#&quot;&gt;</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于输出语句</title>
    <link href="http://example.com/posts/5e4c8c3.html"/>
    <id>http://example.com/posts/5e4c8c3.html</id>
    <published>2022-10-01T21:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h1><h2 id="在Start中"><a href="#在Start中" class="headerlink" title="在Start中"></a>在Start中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 普通输出</span></span><br><span class="line">        Debug.Log(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        <span class="comment">// 警告输出</span></span><br><span class="line">        Debug.LogWarning(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        <span class="comment">// 错误输出</span></span><br><span class="line">        Debug.LogError(<span class="string">&quot;test3&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="在Update中"><a href="#在Update中" class="headerlink" title="在Update中"></a>在Update中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 绘制一条线（开始点， 结束点， 颜色， 持续时间， 是否被靠近相机的物体遮挡）</span></span><br><span class="line">        Debug.DrawLine(Vector3.zero, Vector3.one);</span><br><span class="line">        <span class="comment">// 绘制射线(长度不是无线需要自己输入长度)参数(射线起点， 射线方向， 颜色)参数二乘以所需长度即可指定长度否则为1</span></span><br><span class="line">        Debug.DrawRay(Vector3.zero, Vector3.up, Color.red);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;输出语句&quot;&gt;&lt;a href=&quot;#输出语句&quot; class=&quot;headerlink&quot; title=&quot;输出语句&quot;&gt;&lt;/a&gt;输出语句&lt;/h1&gt;&lt;h2 id=&quot;在Start中&quot;&gt;&lt;a href=&quot;#在Start中&quot; class=&quot;headerlink&quot; title=&quot;在St</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本关于Vector3</title>
    <link href="http://example.com/posts/4f978fef.html"/>
    <id>http://example.com/posts/4f978fef.html</id>
    <published>2022-10-01T20:00:01.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vector3结构体"><a href="#Vector3结构体" class="headerlink" title="Vector3结构体"></a>Vector3结构体</h1><p><strong><em>Vexctor3是属于C#中的结构体，里面包含三个变量x,y,z。可以代表向量，坐标，旋转，缩放</em></strong></p><h2 id="Vector3构造体的基本操作"><a href="#Vector3构造体的基本操作" class="headerlink" title="Vector3构造体的基本操作"></a>Vector3构造体的基本操作</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建结构体</span></span><br><span class="line">Vector3 v = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 为快捷创造</span></span><br><span class="line">v2 = Vector3.zero; <span class="comment">// zero = (0, 0, 0)</span></span><br><span class="line">v3 = Vector3.one; <span class="comment">// one = (1, 1, 1)</span></span><br><span class="line"><span class="comment">// 修改构造体</span></span><br><span class="line">v.x = <span class="number">2</span>;</span><br><span class="line">v.y = <span class="number">2</span>;</span><br><span class="line">v.z = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="Vector3构造体的基本运算-向量"><a href="#Vector3构造体的基本运算-向量" class="headerlink" title="Vector3构造体的基本运算(向量)"></a>Vector3构造体的基本运算(向量)</h2><ul><li><p>计算两个向量间的夹角</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(Vector3.Angle(v, v2));</span><br><span class="line">        <span class="comment">// cosa = &lt;v, v2&gt;= v*v2 / |v|*|v2|</span></span><br><span class="line">        <span class="comment">// |v| = (x*x + y*y + z*z) **0.5</span></span><br><span class="line">        <span class="comment">// |v2| = (x2*x2 + y2*y2 + z2*z2) **0.5</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>计算两个向量间的距离</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Distance(v, v2));</span><br><span class="line">    <span class="comment">// b = v*v2 = x*x2 + y*y2 + z*z2</span></span><br><span class="line">    <span class="comment">// b = |v|*|v2|*cosa</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>两个向量间的点乘</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Dot(v, v2));</span><br><span class="line">    <span class="comment">// v · v2 = |v|*|v2|*cosa</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>两个向量间的叉乘</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Cross(v, v2));</span><br><span class="line">    <span class="comment">// 得到一个既垂直于v又垂直于v2的向量假设为n</span></span><br><span class="line">    <span class="comment">// n = v x v2 = (y*z2 - y2*z, x2*z - z2*x, xy2 - x2y)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>插值</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(Vector3.Lerp(Vector3.zero,Vector3.one, <span class="number">0.8f</span>));</span><br><span class="line">    <span class="comment">// 公式start = start + (end - start) * t</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>模长</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(v.magnitude);</span><br><span class="line">    <span class="comment">// |v| = (x*x + y*y + z*z) **0.5 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>规范化向量</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(v.normalized);</span><br><span class="line">    <span class="comment">// 返回大小为一的向量保存原方向，若向量太小则返回0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Vector3构造体的基本运算-旋转"><a href="#Vector3构造体的基本运算-旋转" class="headerlink" title="Vector3构造体的基本运算(旋转)"></a>Vector3构造体的基本运算(旋转)</h2><ul><li><p>欧拉角(360度)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// z轴方向30度</span></span><br><span class="line">    Vector3 rotate = <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">30</span>);</span><br><span class="line">    Quaternion quaternion = Quaternion.identity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>欧拉角转为四元数</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    quaternion = Quaternion.Euler(rotate);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>四元数转为欧拉角</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">   rotate = quaternion.eulerAngles;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>看向一个物体</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">   quaternion = Quaternion.LookRotation(<span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip error"><p>error</p></div></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vector3结构体&quot;&gt;&lt;a href=&quot;#Vector3结构体&quot; class=&quot;headerlink&quot; title=&quot;Vector3结构体&quot;&gt;&lt;/a&gt;Vector3结构体&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Vexctor3是属于C#中的结构体，里面包含三个变</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#脚本语言输出顺序(1)</title>
    <link href="http://example.com/posts/e18a0bd3.html"/>
    <id>http://example.com/posts/e18a0bd3.html</id>
    <published>2022-10-01T20:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-脚本语言的语句输出顺序"><a href="#C-脚本语言的语句输出顺序" class="headerlink" title="C#脚本语言的语句输出顺序"></a>C#脚本语言的语句输出顺序</h1><p>  <strong><em>以下语句皆为作为在unity中作为组件脚本语句时的输出顺序</em></strong></p><h2 id="Awake"><a href="#Awake" class="headerlink" title="Awake"></a>Awake</h2><ul><li>最优先运行  <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Awake最先调用&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="OnEnable"><a href="#OnEnable" class="headerlink" title="OnEnable"></a>OnEnable</h2><ul><li>激活unity组件后调用<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnable</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnEnable激活组件时调用&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><ul><li>第一次执行OnEnable后调用<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Start调用时机为第一次OnEnable后&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><ul><li>每一帧调用一次<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;每一帧调用之后&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="LateUpdate"><a href="#LateUpdate" class="headerlink" title="LateUpdate"></a>LateUpdate</h2><ul><li>LateUpdate在Update执行后执行一次<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;LateUpdate在Update执行后执行一次&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="FixedUpdate"><a href="#FixedUpdate" class="headerlink" title="FixedUpdate"></a>FixedUpdate</h2><ul><li>固定间隔执行一次(unity默认0.02秒)<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;固定间隔执行一次&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="OnDisable"><a href="#OnDisable" class="headerlink" title="OnDisable"></a>OnDisable</h2><ul><li>OnDisable非激活调用一次<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">       Debug.Log(<span class="string">&quot;OnDisable非激活调用一次&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="OnDestroy"><a href="#OnDestroy" class="headerlink" title="OnDestroy"></a>OnDestroy</h2><ul><li>OnDestroy组件销毁时调用<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDestroy</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnDestroy组件销毁时调用&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><div class="tip error"><p>error</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-脚本语言的语句输出顺序&quot;&gt;&lt;a href=&quot;#C-脚本语言的语句输出顺序&quot; class=&quot;headerlink&quot; title=&quot;C#脚本语言的语句输出顺序&quot;&gt;&lt;/a&gt;C#脚本语言的语句输出顺序&lt;/h1&gt;&lt;p&gt;  &lt;strong&gt;&lt;em&gt;以下语句皆为作为在uni</summary>
      
    
    
    
    
    <category term="unity&amp;C#学习笔记" scheme="http://example.com/tags/unity-C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156.html"/>
    <id>http://example.com/posts/4a17b156.html</id>
    <published>2022-07-24T00:00:00.000Z</published>
    <updated>2022-10-16T07:03:50.159Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
